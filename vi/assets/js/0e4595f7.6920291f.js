"use strict";(self.webpackChunkmy_web_notes=self.webpackChunkmy_web_notes||[]).push([[1636],{6151:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>r,default:()=>a,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var t=n(4848),i=n(8453);const d={tag:["Tool"]},r="Git",c={id:"cheat-sheet/tools/Git",title:"Git",description:"Git is version control system",source:"@site/docs/cheat-sheet/tools/Git.md",sourceDirName:"cheat-sheet/tools",slug:"/cheat-sheet/tools/Git",permalink:"/web-notes/vi/docs/cheat-sheet/tools/Git",draft:!1,unlisted:!1,editUrl:"https://github.com/sunflynf/web-notes/tree/main/docs/cheat-sheet/tools/Git.md",tags:[],version:"current",frontMatter:{tag:["Tool"]},sidebar:"documentSidebar",previous:{title:"Command Line",permalink:"/web-notes/vi/docs/cheat-sheet/tools/CommandLine"},next:{title:"Links",permalink:"/web-notes/vi/docs/links/"}},l={},o=[{value:"Basic command",id:"basic-command",level:2},{value:"Advance command",id:"advance-command",level:2},{value:".gitignore",id:"gitignore",level:2}];function h(e){const s={code:"code",h1:"h1",h2:"h2",hr:"hr",input:"input",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"git",children:"Git"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Git"})," is version control system"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Tracking code changes + who made changes"}),"\n",(0,t.jsx)(s.li,{children:"Coding collaboration"}),"\n",(0,t.jsxs)(s.li,{children:["Actions:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Manage projects with ",(0,t.jsx)(s.strong,{children:"Repository"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Clone"})," to work - local copy"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Staging"})," + ",(0,t.jsx)(s.strong,{children:"Committing"})," -> control & tracking changes"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Branch"})," + ",(0,t.jsx)(s.strong,{children:"Merge"})," -> work on different part"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Pull"})," -> Get new changes of project"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Push"})," -> Update new change to project"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["Helper","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"git <command> -help"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"git help --all"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"basic-command",children:"Basic command"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Use for"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git --version"})}),(0,t.jsx)(s.td,{children:"Check version"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:'git config --global user.name "exp"'})," | ",(0,t.jsx)(s.code,{children:'git config --global user.gmail "exp@email.com"'})]}),(0,t.jsx)(s.td,{children:"Setting"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git init"})}),(0,t.jsx)(s.td,{children:"Initialize Git on current folder"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git status"})}),(0,t.jsx)(s.td,{children:"Checking status of repo"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git status --short"})}),(0,t.jsx)(s.td,{children:"Checking status (Short ver)*"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git log"})}),(0,t.jsx)(s.td,{children:"View the history of commits for repo"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git log --oneline"})}),(0,t.jsx)(s.td,{children:"(Short ver)"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git add <file-name.type>"})}),(0,t.jsx)(s.td,{children:"Staged file"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"git add --all"})," | ",(0,t.jsx)(s.code,{children:"git add -A"})]}),(0,t.jsx)(s.td,{children:"Staged all files"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:'git commit -m "Updated"'})}),(0,t.jsx)(s.td,{children:"Commit with message"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:'git commit -a -m "Updated"'})}),(0,t.jsxs)(s.td,{children:["Add ",(0,t.jsx)(s.code,{children:"-a"})," for automatically stage every changed"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git brand"})}),(0,t.jsx)(s.td,{children:"List all branchs"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git branch develop"})}),(0,t.jsxs)(s.td,{children:["Create branch ",(0,t.jsx)(s.strong,{children:"develop"})," from ",(0,t.jsx)(s.strong,{children:"main/master"}),". | Note: ",(0,t.jsx)(s.code,{children:"develop"})," is example name"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git checkout develop"})}),(0,t.jsxs)(s.td,{children:["Move workspace to branch ",(0,t.jsx)(s.strong,{children:"develop"})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git checkout -b a-123"})}),(0,t.jsxs)(s.td,{children:["Move to branch ",(0,t.jsx)(s.strong,{children:"a-123"}),", create before move if it does not existed"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git merge a-123"})}),(0,t.jsxs)(s.td,{children:["Update changes in ",(0,t.jsx)(s.strong,{children:"a-123"})," into ",(0,t.jsx)(s.strong,{children:"main/master"})," branch"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"git branch -d a-123"})}),(0,t.jsxs)(s.td,{children:["Delete branch ",(0,t.jsx)(s.strong,{children:"a-123"})]})]})]})]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Status short ver","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"?? - Untracked files"}),"\n",(0,t.jsx)(s.li,{children:"A - Files added to stage"}),"\n",(0,t.jsx)(s.li,{children:"M - Modified files"}),"\n",(0,t.jsx)(s.li,{children:"D - Deleted files"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"advance-command",children:"Advance command"}),"\n",(0,t.jsx)(s.table,{children:(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Command"}),(0,t.jsx)(s.th,{children:"Use for"})]})})}),"\n",(0,t.jsx)(s.h2,{id:"gitignore",children:".gitignore"}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","git revert"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","git reset"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","git amend"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ",".gitignore"]}),"\n",(0,t.jsxs)(s.li,{className:"task-list-item",children:[(0,t.jsx)(s.input,{type:"checkbox",disabled:!0})," ","Security SSH"]}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var t=n(6540);const i={},d=t.createContext(i);function r(e){const s=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(d.Provider,{value:s},e.children)}}}]);