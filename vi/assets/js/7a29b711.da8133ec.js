"use strict";(self.webpackChunkmy_web_notes=self.webpackChunkmy_web_notes||[]).push([[1475],{7096:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var r=a(4848),s=a(8453);const t={tags:["SQL"]},l="Advanced SQL Code Structure",i={id:"summarize/database/SQL_Advance",title:"Advanced SQL Code Structure",description:"Advanced Data Definition Language (DDL)",source:"@site/docs/summarize/database/SQL_Advance.md",sourceDirName:"summarize/database",slug:"/summarize/database/SQL_Advance",permalink:"/web-notes/vi/docs/summarize/database/SQL_Advance",draft:!1,unlisted:!1,editUrl:"https://github.com/sunflynf/web-notes/tree/main/docs/summarize/database/SQL_Advance.md",tags:[{inline:!0,label:"SQL",permalink:"/web-notes/vi/docs/tags/sql"}],version:"current",frontMatter:{tags:["SQL"]},sidebar:"documentSidebar",previous:{title:"Structured Query Language",permalink:"/web-notes/vi/docs/summarize/database/SQL"},next:{title:"Bun",permalink:"/web-notes/vi/docs/summarize/env/bun"}},d={},c=[{value:"Advanced Data Definition Language (DDL)",id:"advanced-data-definition-language-ddl",level:2},{value:"Advanced Data Manipulation Language (DML)",id:"advanced-data-manipulation-language-dml",level:2},{value:"Advanced Data Control Language (DCL)",id:"advanced-data-control-language-dcl",level:2},{value:"Advanced Transaction Control Language (TCL)",id:"advanced-transaction-control-language-tcl",level:2},{value:"Additional Advanced Elements",id:"additional-advanced-elements",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"advanced-sql-code-structure",children:"Advanced SQL Code Structure"}),"\n",(0,r.jsx)(n.h2,{id:"advanced-data-definition-language-ddl",children:"Advanced Data Definition Language (DDL)"}),"\n",(0,r.jsx)(n.p,{children:"DDL commands not only define and manage database structures but also include sophisticated features like constraints, indexes, and more."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Creating Tables with Constraints"}),": Constraints enforce rules at the column level."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE Employees (\r\n    EmployeeID INT PRIMARY KEY,\r\n    LastName VARCHAR(255) NOT NULL,\r\n    FirstName VARCHAR(255) NOT NULL,\r\n    BirthDate DATE CHECK (BirthDate > '1900-01-01'),\r\n    DepartmentID INT,\r\n    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)\r\n);\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Creating Indexes"}),": Indexes improve query performance."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE INDEX idx_lastname ON Employees (LastName);\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Partitioning Tables"}),": Partition large tables to manage and query data more efficiently."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE Sales (\r\n    SaleID INT,\r\n    SaleDate DATE,\r\n    Amount DECIMAL(10, 2)\r\n) PARTITION BY RANGE (SaleDate) (\r\n    PARTITION p0 VALUES LESS THAN ('2023-01-01'),\r\n    PARTITION p1 VALUES LESS THAN ('2024-01-01')\r\n);\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"advanced-data-manipulation-language-dml",children:"Advanced Data Manipulation Language (DML)"}),"\n",(0,r.jsx)(n.p,{children:"DML commands include complex queries, subqueries, common table expressions (CTEs), and window functions."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Subqueries and Correlated Subqueries"}),": Subqueries that reference columns from the outer query."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT FirstName, LastName\r\nFROM Employees e\r\nWHERE EXISTS (\r\n    SELECT 1\r\n    FROM Departments d\r\n    WHERE d.DepartmentID = e.DepartmentID\r\n    AND d.DepartmentName = 'HR'\r\n);\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Common Table Expressions (CTEs)"}),": CTEs provide a way to create temporary result sets."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"WITH DepartmentSales AS (\r\n    SELECT DepartmentID, SUM(Amount) AS TotalSales\r\n    FROM Sales\r\n    GROUP BY DepartmentID\r\n)\r\nSELECT d.DepartmentName, ds.TotalSales\r\nFROM Departments d\r\nJOIN DepartmentSales ds ON d.DepartmentID = ds.DepartmentID;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Window Functions"}),": Perform calculations across a set of table rows related to the current row."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT EmployeeID, LastName, FirstName,\r\n       SUM(Salary) OVER (PARTITION BY DepartmentID ORDER BY Salary) AS RunningTotal\r\nFROM Employees;\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"advanced-data-control-language-dcl",children:"Advanced Data Control Language (DCL)"}),"\n",(0,r.jsx)(n.p,{children:"Advanced DCL involves fine-grained permissions and roles."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Managing Roles and Permissions"}),": Create roles for better access control."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE ROLE Manager;\r\nGRANT SELECT, INSERT, UPDATE ON Employees TO Manager;\r\nGRANT Manager TO 'username';\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"advanced-transaction-control-language-tcl",children:"Advanced Transaction Control Language (TCL)"}),"\n",(0,r.jsx)(n.p,{children:"TCL commands in advanced SQL manage complex transactions and concurrency control."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Transaction Isolation Levels"}),": Control the visibility of transactions."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;\r\nBEGIN TRANSACTION;\r\n-- SQL statements\r\nCOMMIT;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Two-Phase Commit"}),": Ensure transactions are committed across multiple databases."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"BEGIN;\r\n-- Phase 1: Prepare\r\nPREPARE TRANSACTION 'tx1';\r\n-- Phase 2: Commit\r\nCOMMIT PREPARED 'tx1';\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"additional-advanced-elements",children:"Additional Advanced Elements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Recursive CTEs"}),": Useful for hierarchical data."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"WITH RECURSIVE EmployeeHierarchy AS (\r\n    SELECT EmployeeID, ManagerID, FirstName, LastName\r\n    FROM Employees\r\n    WHERE ManagerID IS NULL\r\n    UNION ALL\r\n    SELECT e.EmployeeID, e.ManagerID, e.FirstName, e.LastName\r\n    FROM Employees e\r\n    JOIN EmployeeHierarchy eh ON e.ManagerID = eh.EmployeeID\r\n)\r\nSELECT * FROM EmployeeHierarchy;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Advanced Joins"}),": Complex joins involving multiple tables."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT e.FirstName, e.LastName, p.ProjectName\r\nFROM Employees e\r\nJOIN EmployeeProjects ep ON e.EmployeeID = ep.EmployeeID\r\nJOIN Projects p ON ep.ProjectID = p.ProjectID;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pivoting and Unpivoting Data"}),": Transform rows into columns and vice versa."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT *\r\nFROM (\r\n    SELECT Year, Quarter, Sales\r\n    FROM SalesData\r\n) src\r\nPIVOT (\r\n    SUM(Sales)\r\n    FOR Quarter IN ([Q1], [Q2], [Q3], [Q4])\r\n) pvt;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Dynamic SQL"}),": Build and execute SQL queries dynamically."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"DECLARE @sql NVARCHAR(MAX);\r\nSET @sql = 'SELECT * FROM ' + @tableName;\r\nEXEC sp_executesql @sql;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Stored Procedures and Triggers"}),": Encapsulate SQL logic in reusable components."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE PROCEDURE AddEmployee\r\n    @FirstName NVARCHAR(50),\r\n    @LastName NVARCHAR(50),\r\n    @BirthDate DATE,\r\n    @DepartmentID INT\r\nAS\r\nBEGIN\r\n    INSERT INTO Employees (FirstName, LastName, BirthDate, DepartmentID)\r\n    VALUES (@FirstName, @LastName, @BirthDate, @DepartmentID);\r\nEND;\n"})}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>i});var r=a(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);