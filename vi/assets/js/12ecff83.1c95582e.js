"use strict";(self.webpackChunkmy_web_notes=self.webpackChunkmy_web_notes||[]).push([[4673],{2697:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var t=n(4848),s=n(8453);const o={description:"System Admin fast as ****",tags:["JavaScript","TypeScript","React","Frontend","System"]},i="React-admin",a={id:"summarize/package/react/react-admin",title:"React-admin",description:"System Admin fast as ****",source:"@site/docs/summarize/package/react/react-admin.md",sourceDirName:"summarize/package/react",slug:"/summarize/package/react/react-admin",permalink:"/web-notes/vi/docs/summarize/package/react/react-admin",draft:!1,unlisted:!1,editUrl:"https://github.com/sunflynf/web-notes/tree/main/docs/summarize/package/react/react-admin.md",tags:[{inline:!0,label:"JavaScript",permalink:"/web-notes/vi/docs/tags/java-script"},{inline:!0,label:"TypeScript",permalink:"/web-notes/vi/docs/tags/type-script"},{inline:!0,label:"React",permalink:"/web-notes/vi/docs/tags/react"},{inline:!0,label:"Frontend",permalink:"/web-notes/vi/docs/tags/frontend"},{inline:!0,label:"System",permalink:"/web-notes/vi/docs/tags/system"}],version:"current",frontMatter:{description:"System Admin fast as ****",tags:["JavaScript","TypeScript","React","Frontend","System"]},sidebar:"documentSidebar",previous:{title:"Notistack",permalink:"/web-notes/vi/docs/summarize/package/react/notistack"},next:{title:"React-Bootstrap",permalink:"/web-notes/vi/docs/summarize/package/react/react-bootstrap"}},c={},d=[{value:"Key Features",id:"key-features",level:2},{value:"Basic Setup",id:"basic-setup",level:2},{value:"Customizing Resources",id:"customizing-resources",level:2},{value:"Integrate Custom Resources",id:"integrate-custom-resources",level:2},{value:"Handling Authentication",id:"handling-authentication",level:3},{value:"Summary",id:"summary",level:3}];function l(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"react-admin",children:"React-admin"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"The React Framework for B2B Apps"})}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"react-admin"})," is a popular framework built on top of React that simplifies the creation of admin interfaces. It provides various components, hooks, and utilities to manage data CRUD (Create, Read, Update, Delete) operations, with built-in support for data providers like REST, GraphQL, and custom backends. Here's a summary of its key features, along with code samples to help you get started."]}),"\n",(0,t.jsx)(r.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"CRUD Operations"}),": Easily create, read, update, and delete data using intuitive components and hooks."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Data Providers"}),": Out-of-the-box support for REST, GraphQL, and custom data providers."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Authentication"}),": Built-in mechanisms to handle authentication and authorization."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Internationalization"}),": Supports multiple languages for a global user base."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Customizable"}),": Highly customizable through theming, custom components, and hooks."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Responsive"}),": Mobile-friendly out of the box."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsxs)(r.strong,{children:["Install ",(0,t.jsx)(r.code,{children:"react-admin"})," and necessary packages:"]})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"npm install react-admin ra-data-json-server\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Set up a simple admin interface:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"// src/App.tsx\r\nimport React from 'react';\r\nimport { Admin, Resource, ListGuesser } from 'react-admin';\r\nimport jsonServerProvider from 'ra-data-json-server';\r\n\r\nconst dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\r\n\r\nconst App = () => (\r\n  <Admin dataProvider={dataProvider}>\r\n    <Resource name=\"posts\" list={ListGuesser} />\r\n    <Resource name=\"users\" list={ListGuesser} />\r\n  </Admin>\r\n);\r\n\r\nexport default App;\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Render the App:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"// src/index.tsx\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"customizing-resources",children:"Customizing Resources"}),"\n",(0,t.jsx)(r.p,{children:"To create more complex resources, you can define custom components for list, create, edit, and show views."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:'// src/posts.tsx\r\nimport React from \'react\';\r\nimport { List, Datagrid, TextField, ReferenceField, EditButton, Edit, SimpleForm, TextInput, ReferenceInput, SelectInput, Create, Filter } from \'react-admin\';\r\n\r\nconst PostFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label="Search" source="q" alwaysOn />\r\n        <ReferenceInput label="User" source="userId" reference="users" allowEmpty>\r\n            <SelectInput optionText="name" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const PostList = props => (\r\n    <List filters={<PostFilter />} {...props}>\r\n        <Datagrid>\r\n            <TextField source="id" />\r\n            <ReferenceField source="userId" reference="users"><TextField source="name" /></ReferenceField>\r\n            <TextField source="title" />\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const PostEdit = props => (\r\n    <Edit {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source="id" />\r\n            <ReferenceInput source="userId" reference="users"><SelectInput optionText="name" /></ReferenceInput>\r\n            <TextInput source="title" />\r\n            <TextInput multiline source="body" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const PostCreate = props => (\r\n    <Create {...props}>\r\n        <SimpleForm>\r\n            <ReferenceInput source="userId" reference="users"><SelectInput optionText="name" /></ReferenceInput>\r\n            <TextInput source="title" />\r\n            <TextInput multiline source="body" />\r\n        </SimpleForm>\r\n    </Create>\r\n);\n'})}),"\n",(0,t.jsx)(r.h2,{id:"integrate-custom-resources",children:"Integrate Custom Resources"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"// src/App.tsx\r\nimport React from 'react';\r\nimport { Admin, Resource } from 'react-admin';\r\nimport jsonServerProvider from 'ra-data-json-server';\r\nimport { PostList, PostEdit, PostCreate } from './posts';\r\n\r\nconst dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\r\n\r\nconst App = () => (\r\n  <Admin dataProvider={dataProvider}>\r\n    <Resource name=\"posts\" list={PostList} edit={PostEdit} create={PostCreate} />\r\n    <Resource name=\"users\" />\r\n  </Admin>\r\n);\r\n\r\nexport default App;\n"})}),"\n",(0,t.jsx)(r.h3,{id:"handling-authentication",children:"Handling Authentication"}),"\n",(0,t.jsx)(r.p,{children:"To handle authentication, you can create an authentication provider."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"// src/authProvider.ts\r\nconst authProvider = {\r\n  login: ({ username, password }) => {\r\n    localStorage.setItem('username', username);\r\n    return Promise.resolve();\r\n  },\r\n  logout: () => {\r\n    localStorage.removeItem('username');\r\n    return Promise.resolve();\r\n  },\r\n  checkError: (error) => {\r\n    return Promise.resolve();\r\n  },\r\n  checkAuth: () => {\r\n    return localStorage.getItem('username') ? Promise.resolve() : Promise.reject();\r\n  },\r\n  getPermissions: () => Promise.resolve(),\r\n};\r\n\r\nexport default authProvider;\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Then, pass it to the ",(0,t.jsx)(r.code,{children:"Admin"})," component:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"// src/App.tsx\r\nimport React from 'react';\r\nimport { Admin, Resource } from 'react-admin';\r\nimport jsonServerProvider from 'ra-data-json-server';\r\nimport { PostList, PostEdit, PostCreate } from './posts';\r\nimport authProvider from './authProvider';\r\n\r\nconst dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\r\n\r\nconst App = () => (\r\n  <Admin dataProvider={dataProvider} authProvider={authProvider}>\r\n    <Resource name=\"posts\" list={PostList} edit={PostEdit} create={PostCreate} />\r\n    <Resource name=\"users\" />\r\n  </Admin>\r\n);\r\n\r\nexport default App;\n"})}),"\n",(0,t.jsx)(r.h3,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsxs)(r.strong,{children:["Install ",(0,t.jsx)(r.code,{children:"react-admin"})]})," and necessary packages."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Set up a basic admin interface"})," using ",(0,t.jsx)(r.code,{children:"Admin"})," and ",(0,t.jsx)(r.code,{children:"Resource"})," components."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Customize resources"})," by creating custom list, edit, create, and show components."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Handle authentication"})," by providing an ",(0,t.jsx)(r.code,{children:"authProvider"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var t=n(6540);const s={},o=t.createContext(s);function i(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);