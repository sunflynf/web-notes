"use strict";(self.webpackChunkmy_web_notes=self.webpackChunkmy_web_notes||[]).push([[8726],{563:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>o});var i=a(4848),l=a(8453);const t={description:"OOP languages",tags:["Programming lang","Java","OOP"]},s="JAVA",r={id:"summarize/languages/Java",title:"JAVA",description:"OOP languages",source:"@site/docs/summarize/languages/Java.md",sourceDirName:"summarize/languages",slug:"/summarize/languages/Java",permalink:"/web-notes/vi/docs/summarize/languages/Java",draft:!1,unlisted:!1,editUrl:"https://github.com/sunflynf/web-notes/tree/main/docs/summarize/languages/Java.md",tags:[{inline:!0,label:"Programming lang",permalink:"/web-notes/vi/docs/tags/programming-lang"},{inline:!0,label:"Java",permalink:"/web-notes/vi/docs/tags/java"},{inline:!0,label:"OOP",permalink:"/web-notes/vi/docs/tags/oop"}],version:"current",frontMatter:{description:"OOP languages",tags:["Programming lang","Java","OOP"]},sidebar:"documentSidebar",previous:{title:"Programming Languages",permalink:"/web-notes/vi/docs/category/programming-languages"},next:{title:"JavaScript",permalink:"/web-notes/vi/docs/summarize/languages/JavaScript"}},c={},o=[{value:"Introduce",id:"introduce",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Variables",id:"variables",level:3},{value:"Naming",id:"naming",level:3},{value:"Data Types",id:"data-types",level:2},{value:"Primitive",id:"primitive",level:3},{value:"Reference",id:"reference",level:3},{value:"Blocks",id:"blocks",level:2},{value:"Collection Framework",id:"collection-framework",level:2},{value:"Control Flow",id:"control-flow",level:2},{value:"OOP",id:"oop",level:2},{value:"Classes",id:"classes",level:3},{value:"Interfaces",id:"interfaces",level:3},{value:"Encapsulation",id:"encapsulation",level:3},{value:"Polymorphism",id:"polymorphism",level:3},{value:"Abstraction",id:"abstraction",level:3},{value:"Inheritance",id:"inheritance",level:3},{value:"Record",id:"record",level:2},{value:"Optional",id:"optional",level:2},{value:"Collection",id:"collection",level:2},{value:"Functional Interface",id:"functional-interface",level:3},{value:"Lambda",id:"lambda",level:3},{value:"Stream",id:"stream",level:2},{value:"Exception",id:"exception",level:2},{value:"Threads",id:"threads",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"java",children:"JAVA"}),"\n",(0,i.jsx)(n.h2,{id:"introduce",children:"Introduce"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Java"})," works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc.)"]}),"\n",(0,i.jsx)(n.li,{children:"It is open-source and free"}),"\n",(0,i.jsx)(n.li,{children:"It is secure, fast and powerful"}),"\n",(0,i.jsx)(n.li,{children:"It has huge community support"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Java"})," is an ",(0,i.jsx)(n.strong,{children:"object oriented language"})," which gives a clear structure to programs and allows code to be reused, lowering development costs"]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.a,{href:"https://www.w3schools.com/java/java_getstarted.asp",children:[(0,i.jsx)(n.strong,{children:"Set up Java"})," in computer"]})}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Compile & running in cmd | Terminal","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"javac"})," build ",(0,i.jsx)(n.code,{children:".java"})," to ",(0,i.jsx)(n.code,{children:".class"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"java"})," run ",(0,i.jsx)(n.code,{children:".class"})," file"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cmd",children:"> javac Main.java\n> java Main \n"})}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Main {\n  public static void main(String[] args) {\n    /* This is comment\n       in multiple lines\n    */\n    // System.out.print(1 + 1); // This print not enter a new line\n    System.out.println("Hello World");\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"type variableName = value;"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"final type variableName = value;"})," - Unchange value"]}),"\n",(0,i.jsx)(n.li,{children:"variable's name are case-sensitive"}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://howtodoinjava.com/java/basics/java-keywords/",children:"Java keywords"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"naming",children:"Naming"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package com.company.appname.feature.layer;\n\nenum Direction {NORTH, EAST, SOUTH, WEST}\n\npublic interface IControl {};\npublic class UserControl implements IControl {\n    private final String SECRET_KEY = "Nothing!";\n    private String username;\n    private Properties properties;\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n    public String getUsername() {\n        return this.username;\n    }\n};\n\n// Generic: \n// <K,V> -> key, value\n// <T> -> type\n// <E> -> collection elements\n// <S> -> service loaders\npublic interface UserAction<T extends Gender> extends Action<T> {}\n\n// Annotation\npublic @interface FunctionalInterface {}\npublic @Test Documented {}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"data-types",children:"Data Types"}),"\n",(0,i.jsx)(n.h3,{id:"primitive",children:"Primitive"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Describe"}),(0,i.jsx)(n.th,{children:"Range"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"byte"}),(0,i.jsx)(n.td,{children:"8-bit integer"}),(0,i.jsx)(n.td,{children:"-128 to 127"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"short"}),(0,i.jsx)(n.td,{children:"16-bit integer"}),(0,i.jsx)(n.td,{children:"-32,768 to 32,767."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"int"}),(0,i.jsx)(n.td,{children:"32-bit integer"}),(0,i.jsx)(n.td,{children:"-2^31 to 2^31-1"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"long"}),(0,i.jsx)(n.td,{children:"64-bit integer"}),(0,i.jsx)(n.td,{children:"-2^63 to 2^63-1"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"float"}),(0,i.jsx)(n.td,{children:"32-bit floating-point"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"double"}),(0,i.jsx)(n.td,{children:"64-bit floating-point"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"char"}),(0,i.jsx)(n.td,{children:"16-bit Unicode character"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:"true / false"}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"boolean isValid = false;\nint age = 20;\nlong onlineUsers = 3_000_000L; // or 3000000\nfloat weight = 2.5f;\ndouble balanceAmount = -2000.277d;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"reference",children:"Reference"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// The root class of the Java hierarchy. All classes inherit this\nObject obj = new Object();\n\nString str = "Hello world!";\nint[] numbers = {1, 2, 3, 4, 5};\n\n// (Integer|Long).MAX_VALUE\nInteger iNumber = Integer.MIN_VALUE; \n\n// (Float|Double)\n// - NEGATIVE|POSITIVE_INFINITY\n// - MIN_VALUE: The smallest positive value greater than zero that can be represented in a float|double variable.\n// - MAX_VALUE: The largest positive value that can be represented in a float|double variable.\n// - NaN: not a number of type\nFloat fNumber = Float.NEGATIVE_INFINITY; \n'})}),"\n",(0,i.jsx)(n.h2,{id:"blocks",children:"Blocks"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Demo {\n    private Integer number;\n\n    // constructor\n    public Demo() {}\n\n    {\n        // Non-static block statement\n        // Executed every Demo is created\n        System.out.println("Non-static block executed")\n    }\n\n    static {\n        // Executed once when the class is loaded by JVM\n        System.out.println("Static block executed")\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"collection-framework",children:"Collection Framework"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/sunflynf/web-notes/assets/75079929/6f945578-cb29-452d-b22e-1bbac827898e",alt:"java-collections-cheat-sheet"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Collection"}),": root interface for all collection classes"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"control-flow",children:"Control Flow"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// if else\nif (condition) {\n    // code block\n} else if (anotherCondition) {\n    // another code block\n} else {\n    // default code block\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'enum Day { MON, TUE, WED, THUR, FRI, SAT, SUN }\npublic static Boolean isWeekDay(Day day) \n{\n    boolean result = false;\n    switch(day) {\n        case MON, TUE, WED, THUR, FRI: \n            result = true;\n            break;\n        case SAT, SUN: \n            result = false;\n            break;\n        default: \n            throw new IllegalArgumentException("Invalid day: " + day.name())\n    }\n    return result;\n}\n\n// switch + arrow break (JDK 13+)\nint day = 3;\nString dayType = switch (day) {\n    case 1, 2, 3, 4, 5 -> "Weekday";\n    case 6, 7 -> "Weekend";\n    default -> "Invalid day";\n};\n\n// instanceof parsing (JDK 17+)\nObject o;\nswitch (o) \n{\n    case Integer i -> String.format("int %d", i);\n    case Double d  -> String.format("double %f", d);\n    case String s  -> String.format("String %s", s);\n    default        -> o.toString();\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// for loop\nint[] numbers = {1, 2, 3, 4, 5};\nfor (int number : numbers) {\n    System.out.println(number);\n}\n\n// Enhanced for loop\nint[] numbers = {1, 2, 3, 4, 5};\nfor (int number : numbers) {\n    System.out.println(number);\n}\n\n// Collection.forEach\nList<Integer> listNumber = List.of(1, 2, 3, 4, 5);\nlistNumber.forEach(num -> {}); // use with callback\n\n// there also has do-while & while\nint i = 1, sum = 0;\ndo {\n    sum += i;\n    i++;\n} while(i <= 5)\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'outer_loop:\nfor (int i = 0; i <= 5; i++) {\n    inner_loop:\n    for (int j = 0; j <= 5; j++) {\n        // break; // breaks inner loop only\n        break outer_loop; // same way with "continue"\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"oop",children:"OOP"}),"\n",(0,i.jsx)(n.h3,{id:"classes",children:"Classes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public class Car {\n    String color;\n    int year;\n\n    // Default constructor with no arguments\n    public Car() {\n        this.color = "Blue";\n        this.year = 2024;\n    }\n    \n    // Custom constructor\n    public Car(String color, int year) {\n        this.color = color;\n        this.year = year;\n    }\n\n    public void display() {\n        System.out.println("Color: " + color + ", Year: " + year);\n    }\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Using\nCar defaultCar = new Car(); // "Blue", 2024\nCar myCar = new Car("Red", 2020);\nmyCar.display();\n'})}),"\n",(0,i.jsx)(n.h3,{id:"interfaces",children:"Interfaces"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public interface IAnimal {\n    static String sound = "E"; \n    void eat();\n    void sleep();\n    // Can use without override method\n    default void wakeUp () {\n        System.out.println("Open eyes!");\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"encapsulation",children:"Encapsulation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// private attributes + public methods\nclass User {\n    private String name;\n    private Date dob;\n\n    public String getName() { return this.name; }\n    public void setName(String name) { this.name = name; }\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"polymorphism",children:"Polymorphism"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"class CustomMath {\n    // overload method\n    public int sum(int a, int b) { return a + b; }\n    public long sum(int a, int b, int c) { return a + b + c; }\n    public float sum(float a, float b) { return a + b; }\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'class Shape {\n    void draw() {\n        System.out.println("Drawing lines...");\n    }\n}\n\nclass Circle extends Shape {\n    @Override\n    void draw() {\n        System.out.println("Drawing a circle...");\n    }\n}\n\nShape c = new Circle();\nc.draw(); // Drawing a circle\n'})}),"\n",(0,i.jsx)(n.h3,{id:"abstraction",children:"Abstraction"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"interface Battery { void charge(); }\ninterface Horn { void horn(); }\n\n// abstract class cannot use to create object\nabstract class Car {\n    int wheels;\n    String name;\n\n    abstract void run();\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"inheritance",children:"Inheritance"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"class Car {\n    String name;\n    // other configs\n}\n\nfinal class NotInherited {\n    // extends raise Error\n}\n\nclass ElectricCar extends Car {\n    // attributes\n    public ElectricCar(String name, float enginePower) {\n        super(name); // put props to parents\n    }\n    // methods\n}\n"})}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","static method"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","final & static final"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","default method in interface"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"record",children:"Record"}),"\n",(0,i.jsx)(n.h2,{id:"optional",children:"Optional"}),"\n",(0,i.jsx)(n.h2,{id:"collection",children:"Collection"}),"\n",(0,i.jsx)(n.h3,{id:"functional-interface",children:"Functional Interface"}),"\n",(0,i.jsx)(n.h3,{id:"lambda",children:"Lambda"}),"\n",(0,i.jsx)(n.h2,{id:"stream",children:"Stream"}),"\n",(0,i.jsx)(n.h2,{id:"exception",children:"Exception"}),"\n",(0,i.jsx)(n.h2,{id:"threads",children:"Threads"})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>r});var i=a(6540);const l={},t=i.createContext(l);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);