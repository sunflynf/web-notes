"use strict";(self.webpackChunkmy_web_notes=self.webpackChunkmy_web_notes||[]).push([[8729],{4798:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=t(4848),s=t(8453);const i={description:"Backend Frameworks in JavaScript ecosystem.",tags:["Backend","JavaScript","TypeScript","MVC","RESTapis"]},a="NestJS",o={id:"summarize/backend/JS_TS/Nest",title:"NestJS",description:"Backend Frameworks in JavaScript ecosystem.",source:"@site/docs/summarize/backend/JS_TS/Nest.md",sourceDirName:"summarize/backend/JS_TS",slug:"/summarize/backend/JS_TS/Nest",permalink:"/web-notes/vi/docs/summarize/backend/JS_TS/Nest",draft:!1,unlisted:!1,editUrl:"https://github.com/sunflynf/web-notes/tree/main/docs/summarize/backend/JS_TS/Nest.md",tags:[{inline:!0,label:"Backend",permalink:"/web-notes/vi/docs/tags/backend"},{inline:!0,label:"JavaScript",permalink:"/web-notes/vi/docs/tags/java-script"},{inline:!0,label:"TypeScript",permalink:"/web-notes/vi/docs/tags/type-script"},{inline:!0,label:"MVC",permalink:"/web-notes/vi/docs/tags/mvc"},{inline:!0,label:"RESTapis",permalink:"/web-notes/vi/docs/tags/res-tapis"}],version:"current",frontMatter:{description:"Backend Frameworks in JavaScript ecosystem.",tags:["Backend","JavaScript","TypeScript","MVC","RESTapis"]},sidebar:"documentSidebar",previous:{title:"Koa.js",permalink:"/web-notes/vi/docs/summarize/backend/JS_TS/Koa"},next:{title:"Spring boot",permalink:"/web-notes/vi/docs/summarize/backend/Java/SpringBoot"}},c={},l=[{value:"Core Concepts",id:"core-concepts",level:2},{value:"Basic Commands",id:"basic-commands",level:2},{value:"Application Structure",id:"application-structure",level:2},{value:"Controller",id:"controller",level:3},{value:"Service",id:"service",level:3},{value:"Module",id:"module",level:3},{value:"Main Entry File",id:"main-entry-file",level:3},{value:"DTO (Data Transfer Object)",id:"dto-data-transfer-object",level:3},{value:"Pipes",id:"pipes",level:3},{value:"Middleware",id:"middleware",level:3},{value:"Interceptors",id:"interceptors",level:3},{value:"Guards",id:"guards",level:3},{value:"Decorators",id:"decorators",level:3},{value:"Testing",id:"testing",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"nestjs",children:"NestJS"}),"\n",(0,r.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Controller"}),": Handles incoming requests and returns responses."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service"}),": Business logic layer; reusable across the application."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Module"}),": Groups related controllers and providers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Provider"}),": Any class annotated with ",(0,r.jsx)(n.code,{children:"@Injectable()"})," for dependency injection."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"basic-commands",children:"Basic Commands"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Installation"}),": ",(0,r.jsx)(n.code,{children:"npm install -g @nestjs/cli"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Create Project"}),": ",(0,r.jsx)(n.code,{children:"nest new project-name"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Run Application"}),": ",(0,r.jsx)(n.code,{children:"npm run start"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"application-structure",children:"Application Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-plaintext",children:"src/\n  \u251c\u2500\u2500 app.controller.ts\n  \u251c\u2500\u2500 app.controller.spec.ts\n  \u251c\u2500\u2500 app.module.ts\n  \u251c\u2500\u2500 app.service.ts\n  \u251c\u2500\u2500 main.ts\n"})}),"\n",(0,r.jsx)(n.h3,{id:"controller",children:"Controller"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Controller, Get, Post, Body, Param } from '@nestjs/common';\n\n@Controller('items')\nexport class ItemsController {\n  @Get()\n  findAll(): string {\n    return 'This action returns all items';\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string): string {\n    return `This action returns item #${id}`;\n  }\n\n  @Post()\n  create(@Body() createItemDto: any): string {\n    return 'This action adds a new item';\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"service",children:"Service"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ItemsService {\n  findAll(): string {\n    return 'This action returns all items';\n  }\n\n  findOne(id: string): string {\n    return `This action returns item #${id}`;\n  }\n\n  create(createItemDto: any): string {\n    return 'This action adds a new item';\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"module",children:"Module"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Module } from '@nestjs/common';\nimport { ItemsController } from './items.controller';\nimport { ItemsService } from './items.service';\n\n@Module({\n  controllers: [ItemsController],\n  providers: [ItemsService],\n})\nexport class ItemsModule {}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"main-entry-file",children:"Main Entry File"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3000);\n}\nbootstrap();\n"})}),"\n",(0,r.jsx)(n.h3,{id:"dto-data-transfer-object",children:"DTO (Data Transfer Object)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"export class CreateItemDto {\n  readonly name: string;\n  readonly description: string;\n  readonly price: number;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pipes",children:"Pipes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\n\n@Injectable()\nexport class ParseIntPipe implements PipeTransform<string, number> {\n  transform(value: string, metadata: ArgumentMetadata): number {\n    const val = parseInt(value, 10);\n    if (isNaN(val)) {\n      throw new BadRequestException('Validation failed');\n    }\n    return val;\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"middleware",children:"Middleware"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    console.log('Request...');\n    next();\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"interceptors",children:"Interceptors"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TransformInterceptor<T> implements NestInterceptor<T, any> {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    return next.handle().pipe(map(data => ({ data })));\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"guards",children:"Guards"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    const request = context.switchToHttp().getRequest();\n    return validateRequest(request);\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"decorators",children:"Decorators"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Custom Decorator"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\nexport const User = createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Unit Test"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Test, TestingModule } from '@nestjs/testing';\nimport { ItemsService } from './items.service';\n\ndescribe('ItemsService', () => {\n  let service: ItemsService;\n\n  beforeEach(async () => {\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [ItemsService],\n    }).compile();\n\n    service = module.get<ItemsService>(ItemsService);\n  });\n\n  it('should be defined', () => {\n    expect(service).toBeDefined();\n  });\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["More detail: ",(0,r.jsx)(n.a,{href:"https://docs.nestjs.com/",children:"NestJS documentation"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);