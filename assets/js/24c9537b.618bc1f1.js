"use strict";(self.webpackChunkmy_web_notes=self.webpackChunkmy_web_notes||[]).push([[2342],{9512:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var t=r(4848),i=r(8453);const o={description:"Backend Frameworks support RESTapis.",tags:["Backend","Java","Kotlin","XML","Spring","RESTapis"]},a="Spring boot",s={id:"summarize/backend/Java/SpringBoot",title:"Spring boot",description:"Backend Frameworks support RESTapis.",source:"@site/docs/summarize/backend/Java/SpringBoot.md",sourceDirName:"summarize/backend/Java",slug:"/summarize/backend/Java/SpringBoot",permalink:"/web-notes/docs/summarize/backend/Java/SpringBoot",draft:!1,unlisted:!1,editUrl:"https://github.com/sunflynf/web-notes/tree/main/docs/summarize/backend/Java/SpringBoot.md",tags:[{inline:!0,label:"Backend",permalink:"/web-notes/docs/tags/backend"},{inline:!0,label:"Java",permalink:"/web-notes/docs/tags/java"},{inline:!0,label:"Kotlin",permalink:"/web-notes/docs/tags/kotlin"},{inline:!0,label:"XML",permalink:"/web-notes/docs/tags/xml"},{inline:!0,label:"Spring",permalink:"/web-notes/docs/tags/spring"},{inline:!0,label:"RESTapis",permalink:"/web-notes/docs/tags/res-tapis"}],version:"current",frontMatter:{description:"Backend Frameworks support RESTapis.",tags:["Backend","Java","Kotlin","XML","Spring","RESTapis"]},sidebar:"documentSidebar",previous:{title:"NestJS",permalink:"/web-notes/docs/summarize/backend/JS/Nest"},next:{title:"MySQL",permalink:"/web-notes/docs/summarize/database/DBMS/MySQL"}},c={},p=[{value:"Project Setup",id:"project-setup",level:2},{value:"Maven Dependencies (pom.xml)",id:"maven-dependencies-pomxml",level:3},{value:"Application Properties (application.properties)",id:"application-properties-applicationproperties",level:2},{value:"Main Application Class",id:"main-application-class",level:2},{value:"Creating REST Controllers",id:"creating-rest-controllers",level:2},{value:"Spring Data JPA Example",id:"spring-data-jpa-example",level:2},{value:"Entity Class",id:"entity-class",level:3},{value:"Repository Interface",id:"repository-interface",level:3},{value:"Service Class",id:"service-class",level:3},{value:"Spring Security Configuration",id:"spring-security-configuration",level:2},{value:"Security Configuration Class",id:"security-configuration-class",level:3},{value:"Testing with Spring Boot",id:"testing-with-spring-boot",level:2},{value:"Simple Test",id:"simple-test",level:3},{value:"Controller Test",id:"controller-test",level:3},{value:"Actuator Endpoints",id:"actuator-endpoints",level:2},{value:"Tips and Best Practices",id:"tips-and-best-practices",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"spring-boot",children:"Spring boot"}),"\n",(0,t.jsx)(n.h2,{id:"project-setup",children:"Project Setup"}),"\n",(0,t.jsx)(n.h3,{id:"maven-dependencies-pomxml",children:"Maven Dependencies (pom.xml)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>3.0.0</version>\n</parent>\n\n<dependencies>\n    \x3c!-- Core --\x3e\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter</artifactId>\n    </dependency>\n\n    \x3c!-- Web --\x3e\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n\n    \x3c!-- JPA & H2 Database --\x3e\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-data-jpa</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>com.h2database</groupId>\n        <artifactId>h2</artifactId>\n        <scope>runtime</scope>\n    </dependency>\n\n    \x3c!-- Security --\x3e\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-security</artifactId>\n    </dependency>\n\n    \x3c!-- Test --\x3e\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-test</artifactId>\n        <scope>test</scope>\n    </dependency>\n</dependencies>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"application-properties-applicationproperties",children:"Application Properties (application.properties)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# Server Configuration\nserver.port=8080\n\n# Database Configuration\nspring.datasource.url=jdbc:h2:mem:testdb\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=password\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\nspring.h2.console.enabled=true\n\n# Logging\nlogging.level.org.springframework=INFO\n"})}),"\n",(0,t.jsx)(n.h2,{id:"main-application-class",children:"Main Application Class"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class MyApp {\n    public static void main(String[] args) {\n        SpringApplication.run(MyApp.class, args);\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"creating-rest-controllers",children:"Creating REST Controllers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping("/api")\npublic class MyController {\n\n    @GetMapping("/hello")\n    public String sayHello() {\n        return "Hello, Spring Boot 3!";\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"spring-data-jpa-example",children:"Spring Data JPA Example"}),"\n",(0,t.jsx)(n.h3,{id:"entity-class",children:"Entity Class"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"import jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\n\n@Entity\npublic class Product {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    private String name;\n    private Double price;\n\n    // Getters and Setters\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"repository-interface",children:"Repository Interface"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"import org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface ProductRepository extends JpaRepository<Product, Long> {\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"service-class",children:"Service Class"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\npublic class ProductService {\n\n    @Autowired\n    private ProductRepository productRepository;\n\n    public List<Product> getAllProducts() {\n        return productRepository.findAll();\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"spring-security-configuration",children:"Spring Security Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"security-configuration-class",children:"Security Configuration Class"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import org.springframework.context.annotation.Bean;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\nimport org.springframework.security.web.SecurityFilterChain;\n\n@EnableWebSecurity\npublic class SecurityConfig {\n\n    @Bean\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n        http\n            .authorizeHttpRequests(auth -> auth\n                .requestMatchers("/api/**").authenticated()\n                .anyRequest().permitAll()\n            )\n            .formLogin().and()\n            .httpBasic();\n        return http.build();\n    }\n\n    @Bean\n    public UserDetailsService userDetailsService() {\n        var user = User.withDefaultPasswordEncoder()\n                       .username("user")\n                       .password("password")\n                       .roles("USER")\n                       .build();\n        return new InMemoryUserDetailsManager(user);\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"testing-with-spring-boot",children:"Testing with Spring Boot"}),"\n",(0,t.jsx)(n.h3,{id:"simple-test",children:"Simple Test"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"import org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass MyAppTests {\n\n    @Test\n    void contextLoads() {\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"controller-test",children:"Controller Test"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'import org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.web.servlet.MockMvc;\n\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n\n@SpringBootTest\n@AutoConfigureMockMvc\nclass MyControllerTest {\n\n    @Autowired\n    private MockMvc mockMvc;\n\n    @Test\n    void testSayHello() throws Exception {\n        mockMvc.perform(get("/api/hello"))\n               .andExpect(status().isOk())\n               .andExpect(content().string("Hello, Spring Boot 3!"));\n    }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"actuator-endpoints",children:"Actuator Endpoints"}),"\n",(0,t.jsx)(n.p,{children:"Add the actuator dependency:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-actuator</artifactId>\n</dependency>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Enable endpoints in ",(0,t.jsx)(n.code,{children:"application.properties"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"management.endpoints.web.exposure.include=*\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Access endpoints at ",(0,t.jsx)(n.code,{children:"http://localhost:8080/actuator"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"tips-and-best-practices",children:"Tips and Best Practices"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Profiles"}),": Use ",(0,t.jsx)(n.code,{children:"@Profile"})," annotations and ",(0,t.jsx)(n.code,{children:"application-{profile}.properties"})," for different environments."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Validation"}),": Use ",(0,t.jsx)(n.code,{children:"javax.validation"})," annotations like ",(0,t.jsx)(n.code,{children:"@NotNull"})," and ",(0,t.jsx)(n.code,{children:"@Size"})," for request validation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Exception Handling"}),": Use ",(0,t.jsx)(n.code,{children:"@ControllerAdvice"})," and ",(0,t.jsx)(n.code,{children:"@ExceptionHandler"})," for global exception handling."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Configuration Properties"}),": Use ",(0,t.jsx)(n.code,{children:"@ConfigurationProperties"})," for type-safe configuratio"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(6540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);